#
# Description: Install script for Sublime Text
#
# Author: Andy Roper <andyroper42@gmail.com>
# URL: https://github.com/andy-roper/roperdot
#

. "${ROPERDOT_DIR}/source-scripts/install-script-functions"
. "${ROPERDOT_DIR}/source-scripts/win-path-functions"

if [[ "$ROPERDOT_OS_ENV" = darwin ]]; then
	if [[ -n "$has_sudo" ]]; then
		brew install sublime-text || exit $?
	else
		brew install sublime-text --appdir=~/Applications || exit $?
	fi
	sublime_text_dir="$HOME/Library/Application Support/Sublime Text 3"
elif [[ "$ROPERDOT_DESKTOP_ENV" = windows ]]; then
	choco install -y sublimetext3 || exit $?
	source "${ROPERDOT_DIR}/source-scripts/win-env-functions"
	sublime_text_dir="$(win_env_linux_path APPDATA)/Sublime Text 3"
	[[ "$(desktop_shortcut_exists "Sublime Text 3")" ]] || create-windows-shortcut "Sublime Text 3" "%PROGRAMFILES%\Sublime Text 3\sublime_text.exe"
elif [[ "$ROPERDOT_OS_FAMILY" = debian && "$ROPERDOT_DESKTOP_ENV" = gnome ]]; then
	print-web-file https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - || exit $?
	echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list || exit $?
	sudo apt update || exit $?
	sudo apt install sublime-text -y || exit $?
	sublime_text_dir="$HOME/.config/sublime-text-3"
else
	echo "Unsupported platform"
	exit 1
fi

sublime_user_dir="${sublime_text_dir}/Packages/User"
[[ -d "$sublime_user_dir" ]] || mkdir -p "$sublime_user_dir"
config_files="${ROPERDOT_DIR}/install-profiles/standard/config-files/sublime-text"

if [[ -d "$sublime_user_dir" ]]; then
	source "${ROPERDOT_DIR}/source-scripts/input-functions"
	ask_yn_n "Apply updates to Sublime Text 3 user preferences and install recommended packages" y || exit 0
else
	mkdir -p "$config_files"
fi

. "${ROPERDOT_DIR}/source-scripts/find-pip"

# Set values in $sublime_user_dir/Preferences.sublime-settings
if [[ -f "$sublime_user_dir/Preferences.sublime-settings" ]]; then
	echo "Backing up $config_files/Preferences.sublime-settings to $config_files/Preferences.sublime-settings.bak"
	cp "$config_files/Preferences.sublime-settings" "$config_files/Preferences.sublime-settings.bak"
#	$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Preferences.sublime-settings" @"$config_files/Preferences.sublime-settings" || { echo "first set-values-in-json failed with exit code $?, continuing to debug..."; }
	$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Preferences.sublime-settings" @"$config_files/Preferences.sublime-settings"
else
	cp "$config_files/Preferences.sublime-settings" "$sublime_user_dir"
fi

if [[ ! -f "$sublime_text_dir/Installed Packages/Package Control.sublime-package" ]]; then
	[[ -d "$sublime_text_dir/Installed Packages" ]] || mkdir -p "$sublime_text_dir/Installed Packages"
	get-web-file "https://packagecontrol.io/Package%20Control.sublime-package" "$sublime_text_dir/Installed Packages/Package Control.sublime-package"
fi

if command -v choco >/dev/null 2>&1; then
	choco list --local-only >/dev/null && have_shellcheck=true
elif [[ "$ROPERDOT_OS_ENV" = "darwin" ]] && command -v brew >/dev/null 2>&1; then
	brew list >/dev/null && have_shellcheck=true
elif command -v apt >/dev/null 2>&1; then
	apt list --installed >/dev/null && have_shellcheck=true
fi

if [[ -f "$sublime_user_dir/Package Control.sublime-settings" ]]; then
	echo "Backing up $sublime_user_dir/Package Control.sublime-settings to $sublime_user_dir/Package Control.sublime-settings.bak"
	cp "$sublime_user_dir/Package Control.sublime-settings" "$sublime_user_dir/Package Control.sublime-settings.bak"
#	$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Package Control.sublime-settings" bootstrapped true || { echo "second set-values-in-json failed with exit code $?, continuing to debug..."; }
	$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Package Control.sublime-settings" bootstrapped true
	$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Package Control.sublime-settings" --add-to-array installed_packages Alignment BracketHighlighter "Column Select" Emmet HexViewer "HTML-CSS-JS Prettify" HTML5 "Pretty JSON" SideBarEnhancements "Solarized Color Scheme" SublimeCodeIntel SublimeLinter Terminal
else
	cp "$config_files/Package Control.sublime-settings" "$sublime_user_dir"
fi

[[ -n "$have_shellcheck" ]] && $python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Package Control.sublime-settings" --add-to-array installed_packages SublimeLinter-shellcheck || { echo "third set-values-in-json failed with exit code $?, continuing to debug..."; }

# Set terminal spawned by Terminal package to iTerm 2
if [[ "$ROPERDOT_OS_ENV" = darwin && -d "/Applications/iTerm.app" ]]; then
	if [[ -f "$sublime_text_dir/Terminal/Terminal.sublime-settings" ]]; then
		echo "Backing up $sublime_user_dir/Terminal/Terminal.sublime-settings"
		cp "$sublime_user_dir/Terminal/Terminal.sublime-settings" "$sublime_user_dir/Terminal/Terminal.sublime-settings.bak"
#		$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Terminal/Terminal.sublime-settings" terminal "iTerm2-v3.sh" || { echo "fourth set-values-in-json failed with exit code $?, continuing to debug..."; }
		$python_bin "$ROPERDOT_DIR/bin/set-values-in-json" "$sublime_user_dir/Terminal/Terminal.sublime-settings" terminal "iTerm2-v3.sh"
	else
		[[ -d "$sublime_text_dir/Terminal" ]] || mkdir "$sublime_text_dir/Terminal"
		cp "$config_files/Terminal.sublime-settings" "$sublime_text_dir/Terminal"
	fi
fi
