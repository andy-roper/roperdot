if [[ -e /usr/bin/java ]]; then
	f=$(readlink -f /usr/bin/java)
	export JAVA_HOME=$(readlink -f "${f%/*}/../../lib")
fi

mount_iso_readonly () {
	re="\.iso$"
	if [[ -z "$1" || ! "$1" =~ $re ]]; then
		cat <<EOT
mount_iso_readonly: mount an ISO image for reading
Usage: mount_iso_readonly <iso_file>
EOT
		exit 0
	fi
	gnome-disk-image-mounter "$1" || exit $?
	mount_path=$(mount | grep "$1" | awk '{print $3}')
	cd "$mount_path" || return 1
}

mount_iso_writable () {
	re="\.iso$"
	if [[ -z "$1" || ! "$1" =~ $re ]]; then
		cat <<EOT
mount_iso_writable: mount an ISO image for writing
Usage: mount_iso_writable <iso_file>
EOT
		exit 0
	fi
	gnome-disk-image-mounter --writable "$1" || exit $?
	mount_path=$(mount | grep "$1" | awk '{print $3}')
	cd "$mount_path" || return 1
}

if [[ "$ROPERDOT_DESKTOP_ENV" = windows ]]; then
	win_env () {
		if [[ $# -eq 0 || "$1" == "--help" || "$1" == "-h" || "$1" == "-?" ]]; then
			cat <<EOT
win_env: get the value of a Windows env var
Usage: win_env <var-name>
EOT
			exit 0
		fi
		cmd.exe /c echo %$1% 2>/dev/null | tr -d '\r'
	}

	win_env_linux_path () {
		if [[ $# -eq 0 || "$1" == "--help" || "$1" == "-h" || "$1" == "-?" ]]; then
			cat <<EOT
win_env_linux_path: get the value of a Windows env var and convert to a WSL path
Usage: win_env_linux_path <var-name>

The value of the Windows environment variable named var-name will be echoed
after being converted to a WSL path using wslpath.
EOT
			exit 0
		fi
		local winpath="$(cd /mnt/c && cmd.exe /c echo %$1% 2>/dev/null | tr -d '\r')"
		echo $(wslpath "$winpath")
	}

	def_win_env_linux_path () {
		if [[ $# -eq 0 || "$1" == "--help" || "$1" == "-h" || "$1" == "-?" ]]; then
			cat <<EOT
def_win_env_linux_path: define an env var from a Windows env var and convert to a WSL path
Usage: def_win_env_linux_path <var-name> [var-name-to-set]

The value of the Windows environment variable named var-name will be exported
to an environment variable with the same name after being converted to a WSL
path using wslpath. If var-name-to-set is passed, that variable will be
exported instead of using the same name as var-name.
EOT
			exit 0
		fi
		local winpath="$(cd /mnt/c && cmd.exe /c echo %$1% 2>/dev/null | tr -d '\r')"
		export "${2:-$1}=$(wslpath "$winpath")"
	}

	export rd_program_files="$(win_env_linux_path PROGRAMFILES)"
	export rd_program_files_x86="$(win_env_linux_path "PROGRAMFILES(X86)")"
	alias afk="Rundll32.exe user32.dll,LockWorkStation"
fi